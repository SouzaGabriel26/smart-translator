generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  USER
  ADMIN
}

model Users {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  planId    String   @db.Uuid
  role      Roles    @default(USER)

  plan Plans @relation(fields: [planId], references: [id], onDelete: Cascade)

  translations Translations[]

  @@map("users")
}

model Translations {
  id             String   @id @default(uuid()) @db.Uuid
  targetWord     String   @map("target_word")
  translatedWord String   @map("translated_word")
  languageFrom   String   @map("language_from")
  languageTo     String   @map("language_to")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  userId         String   @map("user_id") @db.Uuid
  discarded      Boolean  @default(false)

  user    Users                @relation(fields: [userId], references: [id])
  phrases TranslationPhrases[]

  @@map("translations")
}

model TranslationPhrases {
  id                String   @id @default(uuid()) @db.Uuid
  translationId     String   @map("translation_id") @db.Uuid
  content           String
  translatedContent String   @map("translated_content")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  translation Translations @relation(fields: [translationId], references: [id], onDelete: Cascade)

  @@map("translation_phrases")
}

model Plans {
  id                String  @id @default(uuid()) @db.Uuid
  name              String  @unique
  price             Float
  translationsLimit Int     @map("translations_limit")
  active            Boolean @default(true)

  user          Users[]
  PlansWaitList PlansWaitList[]

  @@map("plans")
}

model PlansWaitList {
  email  String @unique
  planId String @map("plan_id") @db.Uuid

  plan Plans @relation(fields: [planId], references: [id], onDelete: Cascade)

  @@unique([email, planId])
  @@map("plans_wait_list")
}
